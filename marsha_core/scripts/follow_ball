#!/usr/bin/env python

import rospy
import math
from random import uniform

from geometry_msgs.msg import Point
from geometry_msgs.msg import Pose

from marsha_msgs.srv import PostureCmd
from marsha_msgs.srv import GenerateGrasp


FOLLOW_DELAY = 10

def object_to_world(obj_space, obj_pos):
    world = Pose()
    world.position.x = obj_pos.x + obj_space.position.x
    world.position.y = obj_pos.y + obj_space.position.y
    world.position.z = obj_pos.z + obj_space.position.z
    world.orientation = obj_space.orientation
    return world

class Follower():
    def __init__(self):
        rospy.init_node('follower')

        rospy.wait_for_service('/left/posture_cmd')
        self.posture_cmd = rospy.ServiceProxy('/left/posture_cmd', PostureCmd)

        self.pose_delay = 0

        #rospy.wait_for_service('generate_grasp')
        #self.generate_grasp = rospy.ServiceProxy('generate_grasp', GenerateGrasp)

        rospy.Subscriber('/object_pos', Point, self.pos_callBack)
        print('Running')

        rospy.spin()

    # Should probably avg ball position
    def pos_callBack(self, msg):
        if self.pose_delay > 2:
            pose = Pose()
            pose.orientation.x = -0.999911
            pose.orientation.y = 0.006463
            pose.orientation.z = -0.007255
            pose.orientation.w = -0.009191

            #pose.orientation.x = 1
            #pose.orientation.y = 0
            #pose.orientation.z = 0
            #pose.orientation.w = 0

            #pose.orientation.x = 0
            #pose.orientation.y = -1
            #pose.orientation.z = 0
            #pose.orientation.w = 0

            pose.position = msg
            pose.position.z = pose.position.z + 0.01


            rospy.loginfo(pose)

            self.posture_cmd(pose)
            self.pose_delay = 0
        else:
            self.pose_delay += 1


if __name__ == "__main__":
    follower = Follower()