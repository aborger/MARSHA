#!/usr/bin/env python

import rospy
import time

from std_msgs.msg import Empty

from std_srvs.srv import Trigger

from marsha_msgs.srv import MoveCmd

rospy.wait_for_service('/left/joint_pose_cmd')
joint_pose_cmd = rospy.ServiceProxy('/left/joint_pose_cmd', MoveCmd)

rospy.wait_for_service('/left/teensy_cmd_executed')
cmd_state = rospy.ServiceProxy('/left/teensy_cmd_executed', Trigger)

"""
rospy.wait_for_service('/left/pose_cmd')
pose_cmd = rospy.ServiceProxy('/left/pose_cmd', MoveCmd)

rospy.wait_for_service('/left/async_pose_cmd')
async_pose_cmd = rospy.ServiceProxy('/left/async_pose_cmd', MoveCmd)

rospy.wait_for_service('/left/gripper/grasp_cmd')
grasp_cmd = rospy.ServiceProxy('/left/gripper/grasp_cmd', MoveCmd)

rospy.wait_for_service('/left/folding')
fold_cmd = rospy.ServiceProxy('/left/folding', MoveCmd)
"""

reset_pub = rospy.Publisher('/reset', Empty, queue_size=5)

def throw():
    rospy.init_node('throw_controller')
    reset_pub.publish()

    fold_cmd('fold')
    pose_cmd("pickup")
    print('picking up...')
    fold_cmd('unfold')
    pose_cmd("pre_handoff")
    print('preparing for handoff')
    time.sleep(4)
    async_pose_cmd("handoff")
    print('handing off')
    #grasp_cmd("open")

def move():
    print(joint_pose_cmd("hw_fold/step_0"))

    print("step_1")
    print(joint_pose_cmd("hw_fold/step_1"))


    print("step_2")
    print(joint_pose_cmd("hw_fold/step_2"))

    print("step_1")
    print(joint_pose_cmd("hw_fold/step_1"))

    print("step_0")
    print(joint_pose_cmd("hw_fold/step_0"))



if __name__ == "__main__":
    move()