#!/usr/bin/env python

# Unfortunately the AR3 has one stepper that requires a current higher than the big easy controllers can produce.

# A diablo motor controller is being used instead.

# This file replicates the Arduino StepperControl file, but for the diablo which was also unfortunately features drivers written in python.

# Author: Aaron Borger unfortunately...

import rospy
from std_msgs.msg import Int16
from marsha_hardware.diablo.diabloStepper import Stepper
import time

stepper = Stepper(12, 2.8, 0.9)

def rosCmdCallback(msg):
    print('moving:', msg.steps[1])
    stepper.set_point(msg.steps[1])

rospy.init_node('diablo_controller')

rospy.Subscriber("/diablo_cmd", Int16, rosCmdCallback)
enc_pub = rospy.Publisher('/diablo_feedback', Int16, queue_size=10)


def main():
    while not rospy.is_shutdown():
        curr_step = stepper.step()
        enc_pub.publish(curr_step)


if __name__ == "__main__":
    main()





